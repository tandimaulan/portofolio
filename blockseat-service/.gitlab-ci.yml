variables:
  NS_PROD: core #sesuaikan dengan namespace di arsitektur design
  NS_DEVEL: development
  SPRING_PROD: prod
  SPRING_DEVEL: dev

stages:
  - create_dev_yaml
  - build_image_dev
  - deploy_dev_kube
  - create_prod_yaml
  - build_image_prod
  - deploy_prod_kube

build image dev:
  stage: build_image_dev
  tags:
    - ubuntu
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker build --build-arg PROJECT_NAME=${CI_PROJECT_NAME} -t ${CI_REGISTRY}/${CI_PROJECT_PATH}/$CI_COMMIT_BRANCH .
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}/$CI_COMMIT_BRANCH
    - docker rmi ${CI_REGISTRY}/${CI_PROJECT_PATH}/$CI_COMMIT_BRANCH
  only:
    - development

deploy to kubernetes dev:
  stage: deploy_dev_kube
  needs:
    - build image dev
  tags:
    - ubuntu
  script:
    - /home/gitlab-runner/startEnv/kubDevelConnect.sh
    - kubectl apply -f kubernetes/dev-deployment.yaml
    - kubectl apply -f kubernetes/dev-service.yaml
    - kubectl apply -f kubernetes/dev-sa.yaml
    - kubectl rollout restart deployment ${CI_PROJECT_NAME}
  only:
    - development

build image prod:
  stage: build_image_prod
  tags:
    - ubuntu
  script:
    - VERSION=$(cat pom.xml | grep "version" | head -n 3 | awk -F '[<>]' '/<version>/{print $3}' | tail -n 1)
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}/$NS_DEVEL
    - docker tag ${CI_REGISTRY}/${CI_PROJECT_PATH}/$NS_DEVEL ${CI_REGISTRY}/${CI_PROJECT_PATH}:$VERSION
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:$VERSION
    - docker rmi ${CI_REGISTRY}/${CI_PROJECT_PATH}:$VERSION
    - docker rmi ${CI_REGISTRY}/${CI_PROJECT_PATH}/$NS_DEVEL
  only:
    - main
  
deploy to kubernetes prod:
  stage: deploy_prod_kube
  needs:
    - build image prod
  tags:
    - ubuntu
  before_script:
    - kubectl config use-context $KUBE_PROD
  script:
    - kubectl apply -f kubernetes/prod-deployment.yaml
    - kubectl apply -f kubernetes/prod-service.yaml
    - kubectl apply -f kubernetes/prod-httproute.yaml
    - kubectl apply -f kubernetes/prod-sa.yaml
    - kubectl rollout restart deployment -n $NS_PROD ${CI_PROJECT_NAME}
  only:
    - main

### STAGE YAML 
### stage ini bertujuan untuk membuat dan memperbarui file yaml (dev dan prod). 
### untuk dev cukup jalankan 1 kali, stage "create_dev_yaml" diawal
### untuk prod jalankan setiap ada perubahan versi image maupun tags, kemudian push ke branch main.

create prod-yaml:
  stage: create_prod_yaml
  tags:
    - ubuntu
  script:
    - VERSION=$(cat pom.xml | grep "version" | head -n 3 | awk -F '[<>]' '/<version>/{print $3}' | tail -n 1)
    - git config --global user.name "${ADMIN_NAME}"
    - git config --global user.email "${ADMIN_EMAIL}"
    - git remote set-url origin "https://${ADMIN_NAME}:${ADMIN_PASSWORD}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}"
    - git reset --hard origin/$NS_DEVEL
    - git checkout -f $NS_DEVEL
    - git pull origin $NS_DEVEL
    - cd kubernetes
    - \cp -r template.deployment.yaml prod-deployment.yaml
    - \cp -r template.service.yaml prod-service.yaml
    - \cp -r template.httproute.yaml prod-httproute.yaml
    - \cp -r template.sa.yaml prod-sa.yaml
    - sed -i "s/<namespace>/$NS_PROD/g" prod-deployment.yaml prod-service.yaml prod-httproute.yaml prod-sa.yaml
    - sed -i "s/<name_project>/${CI_PROJECT_NAME}/g" prod-deployment.yaml prod-service.yaml prod-httproute.yaml prod-sa.yaml
    - sed -i "s@<image_name>@${CI_REGISTRY}/${CI_PROJECT_PATH}@g" prod-deployment.yaml
    - sed -i "s/<image_tags>/$VERSION/g" prod-deployment.yaml
    - sed -i "s/<spring_profile>/$SPRING_PROD/g" prod-deployment.yaml
    - git tag -f -a "${VERSION}" -m "${VERSION}"
    - git push -f --tags origin "${VERSION}" -o ci.skip
    - git add .
    - git commit -m "upload prod yaml"
    - git push -uf origin $NS_DEVEL
  when: manual
  only:
    - development
  
create dev-yaml:
  stage: create_dev_yaml
  tags:
    - ubuntu
  script:
    - git config --global user.name "${ADMIN_NAME}"
    - git config --global user.email "${ADMIN_EMAIL}"
    - git remote set-url origin "https://${ADMIN_NAME}:${ADMIN_PASSWORD}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}"
    - git reset --hard origin/$NS_DEVEL
    - git checkout -f $NS_DEVEL
    - git pull origin $NS_DEVEL
    - cd kubernetes
    - \cp -r template.deployment.yaml dev-deployment.yaml
    - \cp -r template.service.yaml dev-service.yaml
    - \cp -r template.sa.yaml dev-sa.yaml
    - sed -i "s/<namespace>/$NS_DEVEL/g" dev-deployment.yaml dev-service.yaml dev-sa.yaml
    - sed -i "s/<name_project>/${CI_PROJECT_NAME}/g" dev-deployment.yaml dev-service.yaml dev-sa.yaml
    - sed -i "s@<image_name>@${CI_REGISTRY}/${CI_PROJECT_PATH}/$CI_COMMIT_BRANCH@g" dev-deployment.yaml
    - sed -i "s/<image_tags>/latest/g" dev-deployment.yaml
    - sed -i "s/<spring_profile>/$SPRING_DEVEL/g" dev-deployment.yaml
    - git add .
    - git commit -m "upload dev yaml"
    - git push --force -u origin $NS_DEVEL
  when: manual
  only:
    - development